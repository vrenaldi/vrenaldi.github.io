$fa-font-path: "~font-awesome/fonts";
@import "~font-awesome/scss/font-awesome";

@function strip-unit($value) {
    @if type-of($value) == "number" and not unitless($value) {
        @return $value / ($value * 0 + 1);
    }

    @return $value;
}

@mixin fluid-font-size($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
        font-size: $min-font-size;
        @media (min-width: $min-vw) {
            font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }
        @media (min-width: $max-vw) {
            font-size: $max-font-size;
        }
    }
}

@mixin setup-ratio($width, $height-max, $width-ratio, $height-ratio) {
    width: $width;
    height: calc(#{$height-ratio} / #{$width-ratio} * #{$width});
    max-width: calc(#{$width-ratio} / #{$height-ratio} * #{$height-max});
    max-height: $height-max;

    @media only screen and (orientation: landscape) {
        height: calc(#{$width-ratio} / #{$height-ratio} * #{$width});
        max-width: calc(#{$height-ratio} / #{$width-ratio} * #{$height-max});
    }
}

$min-vw: 576px;
$max-vw: 1200px;
$min-font-size: 16px;
$max-font-size: 24px;

$card-index: container, flipper, back, front;
$card-colors: #212121, #2196F3, #F5F5F5;
$shadow-colors: #263238, #424242;
$background-colors: #FFC107, rgba(245, 124, 0, 0.5);

html {
    @include fluid-font-size($min-vw, $max-vw, $min-font-size, $max-font-size);
    font-family: "Rancho", cursive;
}

body {
    margin: 0;
    padding: 0;
    overflow: hidden;

    background-color: nth($background-colors, 1);
    background-image: linear-gradient(180deg, transparent 50%, nth($background-colors, 2) 50%), linear-gradient(90deg, transparent 50%, nth($background-colors, 2) 50%);
    background-size: 3rem 3rem;
}

#container {
    @include setup-ratio(80vw, 80vh, 53.98, 85.6);

    margin: auto;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    cursor: pointer;

    perspective: 50rem;

    &.flipped > #flipper {
        transform: rotateY(180deg);
    }
}

#flipper {
    width: 100%;
    height: 100%;

    transform-style: preserve-3d;
    transition: transform 0.6s;
}

#card-front {
    width: 100%;
    height: 100%;

    position: absolute;
    top: 0;
    left: 0;
    z-index: index($card-index, front);
    backface-visibility: hidden;

    background-color: nth($card-colors, 1);
    box-shadow: 0 0.5rem 1rem nth($shadow-colors, 1);
    transition: box-shadow 0.3s ease;

    &:hover {
        box-shadow: 0 1rem 2rem nth($shadow-colors, 1);
    }

    display: grid;
    grid-template: repeat(16, 1fr) / repeat(10, 1fr);
    grid-template-areas:
    "... ... ... ... ... ... ... ... ... ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... avt avt avt avt avt avt avt avt ..."
    "... ... ... ... ... ... ... ... ... ..."
    "int int int int int int int int int int"
    "int int int int int int int int int int"
    "... ... ... ... ... ... ... ... ... ..."
    "con con con con con con con con con con"
    "con con con con con con con con con con"
    "con con con con con con con con con con"
    "... ... ... ... ... ... ... ... ... ...";

    transform: rotateY(0deg);

    @media only screen and (orientation: landscape) {
    grid-template: repeat(10, 1fr) / repeat(16, 1fr);
    grid-template-areas:
    "lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt lnt"
    "... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..."
    "... avt avt avt avt avt avt ... ... ... ... ... ... ... ... ..."
    "... avt avt avt avt avt avt ... int int int int int int int int"
    "... avt avt avt avt avt avt ... int int int int int int int int"
    "... avt avt avt avt avt avt ... con con con con con con con con"
    "... avt avt avt avt avt avt ... con con con con con con con con"
    "... avt avt avt avt avt avt ... ... ... ... ... ... ... ... ..."
    "... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..."
    "lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb lnb";
    }
}

#card-back {
    width: 100%;
    height: 100%;
    
    position: absolute;
    top: 0;
    left: 0;
    z-index: index($card-index, back);
    backface-visibility: hidden;

    background-color: nth($card-colors, 1);
    box-shadow: 0 0.5rem 1rem nth($shadow-colors, 1);
    transition: box-shadow 0.3s ease;

    &:hover {
        box-shadow: 0 1rem 2rem nth($shadow-colors, 1);
    }

    display: grid;
    grid-template: repeat(16, 1fr) / repeat(10, 1fr);
    grid-template-areas:
    "skl skl skl skl skl skl skl skl skl skl"
    "skl skl skl skl skl skl skl skl skl skl"
    "skl skl skl skl skl skl skl skl skl skl"
    "skl skl skl skl skl skl skl skl skl skl"
    "skl skl skl skl skl skl skl skl skl skl"
    "skm skm skm skm skm skm skm skm skm skm"
    "skm skm skm skm skm skm skm skm skm skm"
    "ptl ptl ptl ptl ptl ptl ptl ptl ptl ptl"
    "ptl ptl ptl ptl ptl ptl ptl ptl ptl ptl"
    "prt prt prt prt prt prt prt prt prt prt"
    "prt prt prt prt prt prt prt prt prt prt"
    "prt prt prt prt prt prt prt prt prt prt"
    "prt prt prt prt prt prt prt prt prt prt"
    "prt prt prt prt prt prt prt prt prt prt"
    "prt prt prt prt prt prt prt prt prt prt"
    "... ... ... ... ... ... ... pmo pmo pmo";

    transform: rotateY(180deg);

    @media only screen and (orientation: landscape) {
        grid-template: repeat(10, 1fr) / repeat(16, 1fr);
        grid-template-areas: "";
    }
}

#avatar {
    grid-area: avt;

    > svg {
        width: 100%;
        height: 100%;
    }
}

#introduction {
    grid-area: int;
    background-color: nth($card-colors, 2);
    color: nth($card-colors, 3);

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    > #name {
        font-size: 1.25rem;
        font-weight: 800;
        text-transform: uppercase;

        @media only screen and (orientation: landscape) {
            font-size: 1.75rem;
        }
    }

    > #title {
        font-weight: 600;
    }

    @media only screen and (orientation: landscape) {
        background-color: transparent;
    }
}

#contact {
    grid-area: con;
    color: nth($card-colors, 3);

    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

#line-top {
    grid-area: lnt;

    height: 50%;
    background-color: nth($card-colors, 2);
}

#line-bottom {
    grid-area: lnb;
    align-self: end;
    
    height: 50%;
    background-color: nth($card-colors, 2);
}

#skills {
    grid-area: skl;

    > svg {
        width: 100%;
        height: 100%;

        > .skills-chart-container {
            fill: none;
            stroke: nth($shadow-colors, 2);
            stroke-width: 0.1rem;
        }

        > .skills-chart {
            fill: none;
            stroke: nth($card-colors, 2);
            stroke-width: 0.1rem;
            stroke-linecap: round;
        }

        > .skills-info {
            font-size: 0.75rem;
            fill: nth($card-colors, 3);
        }

        > .skills-title {
            font-size: 0.5rem;
            fill: nth($card-colors, 3);
        }
    }
}

#skills-more {
    grid-area: skm;

    margin: 0 0.7rem;
    color: nth($card-colors, 3);

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-content: center;

    > .skills-more-item {
        margin: 0 0.3rem;
    }
}

#portfolio-title {
    grid-area: ptl;

    font-size: 2rem;
    color: nth($card-colors, 3);
    border-top: 0.5rem solid nth($card-colors, 2);

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#portfolio {
    grid-area: prt;

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    > .portfolio-item {
        height: 30%;

        display: flex;
        flex-direction: row;
        align-items: center;

        > img {
            width: auto;
            height: 100%;

            border: 0.2rem solid nth($card-colors, 2);

            margin-left: 0.5rem;
            margin-right: 0.5rem;
            border-radius: 50%;

            transition: transform 0.3s ease-in-out;

            &:hover {
                transform: scale(1.5);
            }
        }

        > div.project-details {
            font-size: 0.8rem;
            color: nth($card-colors, 3);

            > .title {
                text-transform: uppercase;
                font-weight: 800;
            }

            > .tech > i {
                margin-left: 0.5rem;
                margin-right: 0.3rem;

                &:first-child {
                    margin-left: 0;
                }
            }

            > .links > a {
                color: nth($card-colors, 3);
                margin-right: 0.5rem;
            }
        }

        &:nth-child(even) {
            align-self: flex-end;

            > div.project-details {
                text-align: right;

                > .links > a:last-child {
                    margin-right: 0;
                }
            }
        }
    }
}

#portfolio-more {
    grid-area: pmo;

    margin-right: 0.5rem;
    text-align: right;

    > a {
        text-decoration: none;
        color: nth($card-colors, 3);
    }
}

#divider {
    grid-area: div;

    width: 100%;
    height: 0.5rem;
    background-color: nth($card-colors, 2);
}

.social {
    width: 3rem;
    height: 3rem;
    margin: 0 0.5rem;

    border-radius: 50%;
    border: 0.3rem solid nth($card-colors, 2);

    text-align: center;
    color: nth($card-colors, 3);

    > i {
        font-size: 1.5rem;
        padding-top: 0.75rem;
    }

    &:hover {
        animation: social-border-glow 2s ease-in-out infinite;
    }    
}

.copyright {
    white-space: nowrap;

    position: fixed;
    left: 50%;
    bottom: 1rem;
    transform: translateX(-50%);

    color: black;
}

@keyframes social-border-glow {
    0% { border-color: nth($card-colors, 2); box-shadow: none; }
    50% { border-color: nth($card-colors, 3); box-shadow: 0 0 1rem 0.25rem nth($card-colors, 2), inset 0 0 1rem 0.25rem nth($card-colors, 2); }
    100% { border-color: nth($card-colors, 2); box-shadow: none; }
}